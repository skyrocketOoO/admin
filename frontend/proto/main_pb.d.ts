// @generated by protoc-gen-es v1.10.0
// @generated from file main.proto (package proto, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ListOption } from "./common_pb.js";
import type { Role } from "./model/role_pb.js";

/**
 * @generated from message proto.CreateAccountReq
 */
export declare class CreateAccountReq extends Message<CreateAccountReq> {
  /**
   * @generated from field: string UserName = 1;
   */
  UserName: string;

  /**
   * @generated from field: string Password = 2;
   */
  Password: string;

  /**
   * @generated from field: string DisplayName = 3;
   */
  DisplayName: string;

  /**
   * @generated from field: optional uint32 RoleID = 4;
   */
  RoleID?: number;

  constructor(data?: PartialMessage<CreateAccountReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.CreateAccountReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountReq;

  static equals(a: CreateAccountReq | PlainMessage<CreateAccountReq> | undefined, b: CreateAccountReq | PlainMessage<CreateAccountReq> | undefined): boolean;
}

/**
 * @generated from message proto.ListAccountReq
 */
export declare class ListAccountReq extends Message<ListAccountReq> {
  /**
   * @generated from field: optional proto.ListOption Option = 1;
   */
  Option?: ListOption;

  constructor(data?: PartialMessage<ListAccountReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.ListAccountReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccountReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccountReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccountReq;

  static equals(a: ListAccountReq | PlainMessage<ListAccountReq> | undefined, b: ListAccountReq | PlainMessage<ListAccountReq> | undefined): boolean;
}

/**
 * @generated from message proto.ListAccountResp
 */
export declare class ListAccountResp extends Message<ListAccountResp> {
  /**
   * @generated from field: repeated proto.Account List = 1;
   */
  List: Account[];

  /**
   * @generated from field: int64 Total = 2;
   */
  Total: bigint;

  constructor(data?: PartialMessage<ListAccountResp>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.ListAccountResp";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAccountResp;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAccountResp;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAccountResp;

  static equals(a: ListAccountResp | PlainMessage<ListAccountResp> | undefined, b: ListAccountResp | PlainMessage<ListAccountResp> | undefined): boolean;
}

/**
 * @generated from message proto.Account
 */
export declare class Account extends Message<Account> {
  /**
   * @generated from field: int32 ID = 1;
   */
  ID: number;

  /**
   * @generated from field: string UserName = 2;
   */
  UserName: string;

  /**
   * @generated from field: string DisplayName = 3;
   */
  DisplayName: string;

  /**
   * @generated from field: string Email = 4;
   */
  Email: string;

  /**
   * @generated from field: int32 State = 5;
   */
  State: number;

  constructor(data?: PartialMessage<Account>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.Account";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Account;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Account;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Account;

  static equals(a: Account | PlainMessage<Account> | undefined, b: Account | PlainMessage<Account> | undefined): boolean;
}

/**
 * @generated from message proto.UpdateAccountReq
 */
export declare class UpdateAccountReq extends Message<UpdateAccountReq> {
  /**
   * @generated from field: string ID = 1;
   */
  ID: string;

  /**
   * @generated from field: string DisplayName = 2;
   */
  DisplayName: string;

  /**
   * 0: no change, 1: active, 2: inactive
   *
   * @generated from field: int32 State = 3;
   */
  State: number;

  constructor(data?: PartialMessage<UpdateAccountReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.UpdateAccountReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAccountReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAccountReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAccountReq;

  static equals(a: UpdateAccountReq | PlainMessage<UpdateAccountReq> | undefined, b: UpdateAccountReq | PlainMessage<UpdateAccountReq> | undefined): boolean;
}

/**
 * @generated from message proto.DeleteAccountReq
 */
export declare class DeleteAccountReq extends Message<DeleteAccountReq> {
  /**
   * @generated from field: string ID = 1;
   */
  ID: string;

  /**
   * @generated from field: proto.Page Page = 2;
   */
  Page?: Page;

  constructor(data?: PartialMessage<DeleteAccountReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.DeleteAccountReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccountReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccountReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccountReq;

  static equals(a: DeleteAccountReq | PlainMessage<DeleteAccountReq> | undefined, b: DeleteAccountReq | PlainMessage<DeleteAccountReq> | undefined): boolean;
}

/**
 * @generated from message proto.CreateRoleReq
 */
export declare class CreateRoleReq extends Message<CreateRoleReq> {
  /**
   * @generated from field: string Name = 1;
   */
  Name: string;

  /**
   * @generated from field: proto.Page Page = 2;
   */
  Page?: Page;

  constructor(data?: PartialMessage<CreateRoleReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.CreateRoleReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRoleReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRoleReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRoleReq;

  static equals(a: CreateRoleReq | PlainMessage<CreateRoleReq> | undefined, b: CreateRoleReq | PlainMessage<CreateRoleReq> | undefined): boolean;
}

/**
 * @generated from message proto.Page
 */
export declare class Page extends Message<Page> {
  /**
   * @generated from field: proto.PageOperation AccountList = 1;
   */
  AccountList?: PageOperation;

  /**
   * @generated from field: proto.PageOperation Role = 2;
   */
  Role?: PageOperation;

  /**
   * @generated from field: proto.PageOperation Setting = 3;
   */
  Setting?: PageOperation;

  constructor(data?: PartialMessage<Page>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.Page";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Page;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Page;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Page;

  static equals(a: Page | PlainMessage<Page> | undefined, b: Page | PlainMessage<Page> | undefined): boolean;
}

/**
 * @generated from message proto.PageOperation
 */
export declare class PageOperation extends Message<PageOperation> {
  /**
   * @generated from field: bool Create = 1;
   */
  Create: boolean;

  /**
   * @generated from field: bool Read = 2;
   */
  Read: boolean;

  /**
   * @generated from field: bool Update = 3;
   */
  Update: boolean;

  /**
   * @generated from field: bool Delete = 4;
   */
  Delete: boolean;

  constructor(data?: PartialMessage<PageOperation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.PageOperation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PageOperation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PageOperation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PageOperation;

  static equals(a: PageOperation | PlainMessage<PageOperation> | undefined, b: PageOperation | PlainMessage<PageOperation> | undefined): boolean;
}

/**
 * @generated from message proto.ListRoleReq
 */
export declare class ListRoleReq extends Message<ListRoleReq> {
  /**
   * @generated from field: optional proto.ListOption Option = 1;
   */
  Option?: ListOption;

  constructor(data?: PartialMessage<ListRoleReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.ListRoleReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRoleReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRoleReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRoleReq;

  static equals(a: ListRoleReq | PlainMessage<ListRoleReq> | undefined, b: ListRoleReq | PlainMessage<ListRoleReq> | undefined): boolean;
}

/**
 * @generated from message proto.ListRoleResp
 */
export declare class ListRoleResp extends Message<ListRoleResp> {
  /**
   * @generated from field: repeated proto.RoleData List = 1;
   */
  List: RoleData[];

  /**
   * @generated from field: int64 Total = 2;
   */
  Total: bigint;

  constructor(data?: PartialMessage<ListRoleResp>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.ListRoleResp";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRoleResp;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRoleResp;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRoleResp;

  static equals(a: ListRoleResp | PlainMessage<ListRoleResp> | undefined, b: ListRoleResp | PlainMessage<ListRoleResp> | undefined): boolean;
}

/**
 * @generated from message proto.RoleData
 */
export declare class RoleData extends Message<RoleData> {
  /**
   * @generated from field: string ID = 1;
   */
  ID: string;

  /**
   * @generated from field: string Name = 2;
   */
  Name: string;

  constructor(data?: PartialMessage<RoleData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.RoleData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoleData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoleData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoleData;

  static equals(a: RoleData | PlainMessage<RoleData> | undefined, b: RoleData | PlainMessage<RoleData> | undefined): boolean;
}

/**
 * @generated from message proto.GetRoleAuthReq
 */
export declare class GetRoleAuthReq extends Message<GetRoleAuthReq> {
  /**
   * if ID is "", return auth based on session
   *
   * @generated from field: optional string ID = 1;
   */
  ID?: string;

  constructor(data?: PartialMessage<GetRoleAuthReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.GetRoleAuthReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRoleAuthReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRoleAuthReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRoleAuthReq;

  static equals(a: GetRoleAuthReq | PlainMessage<GetRoleAuthReq> | undefined, b: GetRoleAuthReq | PlainMessage<GetRoleAuthReq> | undefined): boolean;
}

/**
 * @generated from message proto.GetRoleAuthResp
 */
export declare class GetRoleAuthResp extends Message<GetRoleAuthResp> {
  /**
   * @generated from field: proto.Page Page = 1;
   */
  Page?: Page;

  constructor(data?: PartialMessage<GetRoleAuthResp>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.GetRoleAuthResp";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRoleAuthResp;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRoleAuthResp;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRoleAuthResp;

  static equals(a: GetRoleAuthResp | PlainMessage<GetRoleAuthResp> | undefined, b: GetRoleAuthResp | PlainMessage<GetRoleAuthResp> | undefined): boolean;
}

/**
 * @generated from message proto.UpdateRoleReq
 */
export declare class UpdateRoleReq extends Message<UpdateRoleReq> {
  /**
   * @generated from field: string ID = 1;
   */
  ID: string;

  /**
   * @generated from field: string Name = 2;
   */
  Name: string;

  /**
   * @generated from field: proto.Page Page = 3;
   */
  Page?: Page;

  constructor(data?: PartialMessage<UpdateRoleReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.UpdateRoleReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoleReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoleReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoleReq;

  static equals(a: UpdateRoleReq | PlainMessage<UpdateRoleReq> | undefined, b: UpdateRoleReq | PlainMessage<UpdateRoleReq> | undefined): boolean;
}

/**
 * @generated from message proto.DeleteRoleReq
 */
export declare class DeleteRoleReq extends Message<DeleteRoleReq> {
  /**
   * @generated from field: string ID = 1;
   */
  ID: string;

  constructor(data?: PartialMessage<DeleteRoleReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.DeleteRoleReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRoleReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRoleReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRoleReq;

  static equals(a: DeleteRoleReq | PlainMessage<DeleteRoleReq> | undefined, b: DeleteRoleReq | PlainMessage<DeleteRoleReq> | undefined): boolean;
}

/**
 * @generated from message proto.BindRoleReq
 */
export declare class BindRoleReq extends Message<BindRoleReq> {
  /**
   * @generated from field: string AccountID = 1;
   */
  AccountID: string;

  /**
   * @generated from field: string RoleID = 2;
   */
  RoleID: string;

  constructor(data?: PartialMessage<BindRoleReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.BindRoleReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindRoleReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindRoleReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindRoleReq;

  static equals(a: BindRoleReq | PlainMessage<BindRoleReq> | undefined, b: BindRoleReq | PlainMessage<BindRoleReq> | undefined): boolean;
}

/**
 * @generated from message proto.UnBindRoleReq
 */
export declare class UnBindRoleReq extends Message<UnBindRoleReq> {
  /**
   * @generated from field: string AccountID = 1;
   */
  AccountID: string;

  constructor(data?: PartialMessage<UnBindRoleReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.UnBindRoleReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnBindRoleReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnBindRoleReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnBindRoleReq;

  static equals(a: UnBindRoleReq | PlainMessage<UnBindRoleReq> | undefined, b: UnBindRoleReq | PlainMessage<UnBindRoleReq> | undefined): boolean;
}

/**
 * @generated from message proto.LoginReq
 */
export declare class LoginReq extends Message<LoginReq> {
  /**
   * @generated from field: string UserName = 1;
   */
  UserName: string;

  /**
   * @generated from field: string Password = 2;
   */
  Password: string;

  constructor(data?: PartialMessage<LoginReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.LoginReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginReq;

  static equals(a: LoginReq | PlainMessage<LoginReq> | undefined, b: LoginReq | PlainMessage<LoginReq> | undefined): boolean;
}

/**
 * @generated from message proto.LoginResp
 */
export declare class LoginResp extends Message<LoginResp> {
  /**
   * @generated from field: string SessionID = 1;
   */
  SessionID: string;

  /**
   * @generated from field: proto.model.Role Role = 2;
   */
  Role?: Role;

  constructor(data?: PartialMessage<LoginResp>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.LoginResp";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginResp;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginResp;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginResp;

  static equals(a: LoginResp | PlainMessage<LoginResp> | undefined, b: LoginResp | PlainMessage<LoginResp> | undefined): boolean;
}

/**
 * @generated from message proto.LogoutReq
 */
export declare class LogoutReq extends Message<LogoutReq> {
  /**
   * @generated from field: string SessionID = 1;
   */
  SessionID: string;

  constructor(data?: PartialMessage<LogoutReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.LogoutReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogoutReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogoutReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogoutReq;

  static equals(a: LogoutReq | PlainMessage<LogoutReq> | undefined, b: LogoutReq | PlainMessage<LogoutReq> | undefined): boolean;
}

